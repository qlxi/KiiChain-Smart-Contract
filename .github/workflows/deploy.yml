name: "D"

on:
  push:
    branches: ["m"]
  workflow_dispatch:

jobs:
  j:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "foundry-rs/foundry-toolchain@v1"
      - run: |
          mkdir -p s sc
          cat > s/A.sol << 'EOF'
          // SPDX-License-Identifier: UNLICENSED
          pragma solidity ^0.8.13;
          contract A { uint256 public n; function s(uint256 x) public { n = x; } function i() public { n++; } function g() public view returns (uint256) { return n; } }
          EOF
          cat > sc/B.s.sol << 'EOF'
          // SPDX-License-Identifier: UNLICENSED
          pragma solidity ^0.8.13;
          import {Script, console} from "forge-std/Script.sol";
          import {A} from "../s/A.sol";
          contract B is Script { A public a; function run() public { vm.startBroadcast(); a = new A(); console.log("D:", address(a)); vm.stopBroadcast(); } }
          EOF
      - run: forge install foundry-rs/forge-std
      - run: forge build
      - run: forge script sc/B.s.sol:B --rpc-url https://json-rpc.uno.sentry.testnet.v3.kiivalidator.com/ --private-key ${{ secrets.DEPLOYER_PRIVATE_KEY }} --broadcast -vvv
